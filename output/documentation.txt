Documentacion de Codigo Java
============================

Informacion General del Proyecto
-------------------------------
Nombre del Proyecto: UserManagementSystem2
Descripcion: Documentacion generada para el archivo input/UserManagementSystem2.java

Estructura del Codigo
----------------------
Clase: UserManagementSystem2
	Descripcion: /**
 * Clase principal que contiene el punto de entrada al sistema de gestión de usuarios.
 */
	Metodos:
		Nombre: main
		Descripcion: No hay descripcion.
		Tipo de Retorno: void
		Modificadores: public static
		Parametros: 
		Descripcion de Parametros: 
Clase: User
	Descripcion: /**
 * Clase que representa a un usuario en el sistema.
 */
	Campos:
		Nombre: id
		Descripcion: /**
     * Identificador único del usuario.
     */
		Tipo: String
		Modificadores: private
		Nombre: name
		Descripcion: /**
     * Nombre del usuario.
     */
		Tipo: String
		Modificadores: private
		Nombre: email
		Descripcion: /**
     * Dirección de correo electrónico del usuario.
     */
		Tipo: String
		Modificadores: private
	Metodos:
		Nombre: getId
		Descripcion: /**
     * Obtiene el identificador único del usuario.
     * @return El identificador único del usuario.
     */
		Tipo de Retorno: String
		Modificadores: public
		Parametros: 
		Descripcion de Parametros: 
		Nombre: getName
		Descripcion: /**
     * Obtiene el nombre del usuario.
     * @return El nombre del usuario.
     */
		Tipo de Retorno: String
		Modificadores: public
		Parametros: 
		Descripcion de Parametros: 
		Nombre: setName
		Descripcion: /**
     * Establece el nombre del usuario.
     * @param name El nuevo nombre para el usuario.
     */
		Tipo de Retorno: void
		Modificadores: public
		Parametros: 
		Descripcion de Parametros: 
		Nombre: getEmail
		Descripcion: /**
     * Obtiene la dirección de correo electrónico del usuario.
     * @return La dirección de correo electrónico del usuario.
     */
		Tipo de Retorno: String
		Modificadores: public
		Parametros: 
		Descripcion de Parametros: 
		Nombre: setEmail
		Descripcion: /**
     * Establece la dirección de correo electrónico del usuario.
     * @param email La nueva dirección de correo electrónico del usuario.
     */
		Tipo de Retorno: void
		Modificadores: public
		Parametros: 
		Descripcion de Parametros: 
Clase: AdminUser
	Descripcion: /**
 * Clase que representa a un usuario administrador, que extiende a la clase User.
 */
	Campos:
		Nombre: adminLevel
		Descripcion: /**
     * Nivel de administración del usuario.
     */
		Tipo: String
		Modificadores: private
	Metodos:
		Nombre: getAdminLevel
		Descripcion: /**
     * Obtiene el nivel de administración del usuario.
     * @return El nivel de administración del usuario.
     */
		Tipo de Retorno: String
		Modificadores: public
		Parametros: 
		Descripcion de Parametros: 
		Nombre: setAdminLevel
		Descripcion: /**
     * Establece el nivel de administración del usuario.
     * @param adminLevel El nuevo nivel de administración para el usuario.
     */
		Tipo de Retorno: void
		Modificadores: public
		Parametros: 
		Descripcion de Parametros: 
Clase: UserService
	Descripcion: /**
 * Clase de servicio que gestiona las operaciones con los usuarios.
 */
	Campos:
		Nombre: users
		Descripcion: /**
     * Colección de usuarios gestionada por el servicio.
     */
		Tipo: Map<String,User>
		Modificadores: private
	Metodos:
		Nombre: addUser
		Descripcion: /**
     * Añade un nuevo usuario al repositorio.
     * @param user El usuario a añadir.
     */
		Tipo de Retorno: void
		Modificadores: @Override public
		Parametros: 
		Descripcion de Parametros: 
		Nombre: getUserInfo
		Descripcion: /**
     * Obtiene la información de un usuario basado en su identificador.
     * @param userId El identificador del usuario.
     * @return La información del usuario.
     */
		Tipo de Retorno: String
		Modificadores: @Override public
		Parametros: 
		Descripcion de Parametros: 
		Nombre: removeUser
		Descripcion: /**
     * Elimina un usuario del repositorio.
     * @param userId El identificador del usuario a eliminar.
     */
		Tipo de Retorno: void
		Modificadores: @Override public
		Parametros: 
		Descripcion de Parametros: 
		Nombre: getAllUsers
		Descripcion: /**
     * Obtiene la lista de todos los usuarios.
     * @return La lista de todos los usuarios.
     */
		Tipo de Retorno: List<User>
		Modificadores: public
		Parametros: 
		Descripcion de Parametros: 
Clase: AuditService
	Descripcion: /**
 * Clase de servicio que gestiona el registro de auditorías.
 */
	Campos:
		Nombre: auditLogs
		Descripcion: /**
     * Lista de registros de auditoría.
     */
		Tipo: List<String>
		Modificadores: private
	Metodos:
		Nombre: logAction
		Descripcion: /**
     * Registra una acción en el sistema.
     * @param action La acción a registrar.
     */
		Tipo de Retorno: void
		Modificadores: public
		Parametros: 
		Descripcion de Parametros: 
		Nombre: getLogs
		Descripcion: /**
     * Obtiene todos los registros de auditoría.
     * @return La lista de registros de auditoría.
     */
		Tipo de Retorno: List<String>
		Modificadores: public
		Parametros: 
		Descripcion de Parametros: 
